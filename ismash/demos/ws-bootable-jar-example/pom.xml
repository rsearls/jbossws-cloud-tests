<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.jboss.ws.cloud</groupId>
    <artifactId>ws-bootable-jar-example</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <!--   <module>jaxrs</module>   -->
        <module>jaxws</module> <!--   -->
     </modules>

     <properties>
         <formatting-style-base-directory>${project.parent.parent.parent.basedir}/ide-config</formatting-style-base-directory>

         <version.maven>3.3.9</version.maven>
         <version.aether>1.1.0</version.aether>

         <version.jakarta.ws.rs-api>3.1.0</version.jakarta.ws.rs-api>
         <version.resteasy-bom>6.2.4.Final</version.resteasy-bom>

         <version.jakarta.inject-api>1.0.5</version.jakarta.inject-api>
         <version.jakarta.jakartaee-api>10.0.0</version.jakarta.jakartaee-api>
         <version.microprofile-config-api>1.3</version.microprofile-config-api>

         <wildfly-maven-plugin.version>4.0.0.Final</wildfly-maven-plugin.version>
         <version.maven-war-plugin>3.3.2</version.maven-war-plugin>
         <version.wildfly-jar-maven-plugin>10.0.0.Final</version.wildfly-jar-maven-plugin>

         <version.wildfly.feature-pack>30.0.0.Beta1-SNAPSHOT</version.wildfly.feature-pack>
         <version.wildfly-cloud-galleon-pack>2.0.0.Final</version.wildfly-cloud-galleon-pack>
         <version.jbossws-cxf-feature-pack>7.0.0-SNAPSHOT</version.jbossws-cxf-feature-pack>

         <version.lombok>1.18.20</version.lombok>
         <xtf.version>0.31-202305291230-SNAPSHOT</xtf.version>
         <version.com.fasterxml.jackson>2.13.1</version.com.fasterxml.jackson>
         <version.io.fabric8>6.6.0</version.io.fabric8>
         <version.openshift-client>5.12.2</version.openshift-client>
         <version.jakarta.xml.ws-api>4.0.0</version.jakarta.xml.ws-api>
         <version.intersmash>0.0.1-SNAPSHOT</version.intersmash>
     </properties>

     <dependencyManagement>
         <dependencies>
             <dependency>
                 <groupId>com.fasterxml.jackson</groupId>
                 <artifactId>jackson-bom</artifactId>
                 <version>${version.com.fasterxml.jackson}</version>
                 <scope>import</scope>
                 <type>pom</type>
             </dependency>
             <dependency>
                 <groupId>org.jboss.resteasy</groupId>
                 <artifactId>resteasy-bom</artifactId>
                 <version>${version.resteasy-bom}</version>
                 <type>pom</type>
                 <scope>import</scope>
             </dependency>
             <!-- Used by intersmash-deployments referenced in demos, i.e. bootable-jar app-->
            <dependency>
                <groupId>org.eclipse.microprofile.config</groupId>
                <artifactId>microprofile-config-api</artifactId>
                <version>${version.microprofile-config-api}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>jakarta.platform</groupId>
                <artifactId>jakarta.jakartaee-api</artifactId>
                <version>${version.jakarta.jakartaee-api}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>jakarta.inject</groupId>
                <artifactId>jakarta.inject-api</artifactId>
                <version>${version.jakarta.inject-api}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>jakarta.xml.ws</groupId>
                <artifactId>jakarta.xml.ws-api</artifactId>
                <version>${version.jakarta.xml.ws-api}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>generator-annotations</artifactId>
                <version>${version.io.fabric8}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>openshift-client</artifactId>
                <version>${version.openshift-client}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the CDI API, we use provided scope as the API is included in WildFly -->
        <dependency>
            <groupId>jakarta.inject</groupId>
            <artifactId>jakarta.inject-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <version>${version.jakarta.ws.rs-api}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.intersmash</groupId>
            <artifactId>intersmash-tools-core</artifactId>
            <version>${version.intersmash}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.intersmash</groupId>
            <artifactId>intersmash-tools-provisioners</artifactId>
            <version>${version.intersmash}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>cz.xtf</groupId>
            <artifactId>core</artifactId>
            <version>${xtf.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${version.lombok}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-settings-builder</artifactId>
            <version>${version.maven}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.aether</groupId>
            <artifactId>aether-api</artifactId>
            <version>${version.aether}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.intersmash</groupId>
            <artifactId>intersmash-deployments-provider</artifactId>
            <version>${version.intersmash}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>generator-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>openshift-client</artifactId>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.wildfly.plugins</groupId>
                    <artifactId>wildfly-maven-plugin</artifactId>
                    <version>${wildfly-maven-plugin.version}</version>
                    <configuration>
                        <filename>ROOT.war</filename>
                        <!-- some tests check for the provisioned galleon layers -->
                        <record-provisioning-state>true</record-provisioning-state>
                        <feature-packs>
                            <feature-pack>
                                <location>org.wildfly:wildfly-galleon-pack:${version.wildfly.feature-pack}</location>
                            </feature-pack>
                            <feature-pack>org.wildfly.cloud:wildfly-cloud-galleon-pack:${version.wildfly-cloud-galleon-pack}</feature-pack>
                            <feature-pack>
                                <location>org.jboss.ws.cxf:jbossws-cxf-feature-pack:${version.jbossws-cxf-feature-pack}</location>
                            </feature-pack>
                        </feature-packs>
                        <!-- A list of Galleon layers to provision. -->
                        <layers>
                            <layer>jaxrs</layer>
                            <layer>bean-validation</layer>
                            <layer>management</layer>
                            <layer>webservices</layer>
                        </layers>

                        <galleon-options>
                            <!-- this flag is super necessary: otherwise wildfly-maven-plugin and
                                 wildfly-jar-maven-plugin would collide  -->
                            <jboss-fork-embedded>true</jboss-fork-embedded>
                        </galleon-options>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>package</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!--
                    All EAP 8 deployments are setting the WAR file name to ROOT, according to the parent POM
                    maven-war-plugin configuration
                -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${version.maven-war-plugin}</version>
                    <configuration>
                        <packagingExcludes>WEB-INF/lib/*.jar</packagingExcludes>
                        <warName>ROOT</warName>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>process-classes</phase>
                            <goals>
                                <goal>war</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.wildfly.plugins</groupId>
                    <artifactId>wildfly-jar-maven-plugin</artifactId>
                    <version>${version.wildfly-jar-maven-plugin}</version>
                    <!-- this is common config used by child modules -->
                    <configuration>
                        <feature-packs>
                            <feature-pack>
                                <location>org.wildfly:wildfly-galleon-pack:${version.wildfly.feature-pack}</location>
                            </feature-pack>
                        </feature-packs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>java-generator-maven-plugin</artifactId>
                    <version>${version.io.fabric8}</version>
                </plugin>
            </plugins>
     </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>bootable-jar-openshift</id>
            <activation>
                <file>
                    <exists>maven/bootable-jar-openshift</exists>
                </file>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.wildfly.plugins</groupId>
                            <artifactId>wildfly-jar-maven-plugin</artifactId>
                            <!-- Two package goals - OpenShift and bare metal but we still need to
                                 ensure that artifacts are installed correctly into maven repo -->
                            <executions>
                                <execution>
                                    <!-- Create bootable jar for cloud environment - use already defined
                                         configuration and add filename & cloud support -->
                                    <id>bootable-openshift</id>
                                    <configuration>
                                        <output-file-name>${project.build.finalName}-bootable-openshift.jar</output-file-name>
                                        <!-- Enable cloud support for OCP -->
                                        <cloud/>
                                    </configuration>
                                    <phase>process-test-sources</phase>
                                    <goals>
                                        <goal>package</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <!-- Install artifacts created by wildfly-jar-maven-plugin plugin
                                 manually since the plugin installs it under same name -->
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-install-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>install-bootable-jar-openshift</id>
                                    <phase>generate-test-resources</phase>
                                    <goals>
                                        <goal>install-file</goal>
                                    </goals>
                                    <configuration>
                                        <groupId>${project.groupId}</groupId>
                                        <artifactId>${project.artifactId}</artifactId>
                                        <version>${project.version}</version>
                                        <packaging>jar</packaging>
                                        <classifier>bootable-openshift</classifier>
                                        <file>${project.build.directory}/${project.build.finalName}-bootable-openshift.jar
                                        </file>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>bootable-jar-baremetal</id>
            <activation>
                <file>
                    <exists>maven/bootable-jar-baremetal</exists>
                </file>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.wildfly.plugins</groupId>
                            <artifactId>wildfly-jar-maven-plugin</artifactId>
                            <!-- Bare metal but we still need to ensure that artifacts are installed
                                 correctly into maven repo -->
                            <executions>
                                <execution>
                                    <!-- Create bootable jar for bare metal environment - use already
                                         defined configuration and add filename & cloud support -->
                                    <id>bootable-baremetal</id>
                                    <configuration>
                                        <output-file-name>${project.build.finalName}-bootable-baremetal.jar</output-file-name>
                                    </configuration>
                                    <phase>process-test-sources</phase>
                                    <goals>
                                        <goal>package</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <!-- Install artifacts created by wildfly-jar-maven-plugin plugin
                                 manually since the plugin installs it under same name -->
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-install-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>install-bootable-jar-baremetal</id>
                                    <phase>generate-test-resources</phase>
                                    <goals>
                                        <goal>install-file</goal>
                                    </goals>
                                    <configuration>
                                        <groupId>${project.groupId}</groupId>
                                        <artifactId>${project.artifactId}</artifactId>
                                        <version>${project.version}</version>
                                        <packaging>jar</packaging>
                                        <classifier>bootable-baremetal</classifier>
                                        <file>${project.build.directory}/${project.build.finalName}-bootable-baremetal.jar
                                        </file>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>
</project>
